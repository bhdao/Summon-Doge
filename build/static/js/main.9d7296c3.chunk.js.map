{"version":3,"sources":["logo.svg","TrueSummonDoge/doge.JPG","TrueSummonDoge/TrueSummonDoge.js","App.js","reportWebVitals.js","index.js"],"names":["TrueSummonDoge","state","numbaDoge","dogeButton","dogeReset","dogeWarn","summonDoge","numbaDogeCopy","numbaDogeMasUno","length","push","setState","resetDoge","numbaDogeCopyAgain","stateCopy","doges","this","alert","map","x","alt","src","dogeImg","style","borderRadius","border","boxShadow","className","console","log","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAe,I,iCCAA,G,MAAA,IAA0B,kC,OCsE1BA,E,4MAjEXC,MAAQ,CACJC,UAAW,GACXC,WAAY,WACZC,UAAW,WACXC,SAAU,G,EAGdC,WAAa,WACT,IAAIC,EAAgB,EAAKN,MAAMC,UAC3BM,EAAkB,EAAI,EAAKP,MAAMC,UAAUO,OAC/CF,EAAcG,KAAKF,GACnB,EAAKG,SAAS,CAACT,UAAWK,EAAeJ,WAAW,mBAAoBC,UAAU,Y,EAGtFQ,UAAY,WACR,EAAKD,SAAS,CAACT,UAAW,GAAIC,WAAW,WAAYC,UAAU,c,EAGnES,mBAAqB,EAAKZ,MAAMC,U,EAChCY,UAAY,EAAKb,M,4CAEjB,WAEI,IAAIc,EAmBJ,OAjBuC,KAAnCC,KAAKH,mBAAmBJ,QAAyC,IAAxBO,KAAKf,MAAMI,WACpDW,KAAKL,SAAS,CAACN,SAAU,IACzBY,MAAM,uDAINF,EADyB,aAAzBC,KAAKf,MAAMG,UACH,KAEJY,KAAKH,mBAAmBK,KAAI,SAACC,GAEjC,OAAO,qBAAKC,IAAI,OAAOC,IAAKC,EAASC,MAAO,CAACC,aAAa,OAAQC,OAAO,mBAAoBC,UAAU,iBAAkBC,UAAW,QAAaR,MAIrJS,QAAQC,IAAI,6TAIR,gCAMI,wBAAQF,UAAWX,KAAKf,MAAME,WAAY2B,QAASd,KAAKV,WAAxD,yBAEA,2DAA8BU,KAAKH,mBAAmBJ,UACtD,oBAAIkB,UAAU,MACd,oBAAIA,UAAU,MACd,oBAAIA,UAAU,MACbZ,EACD,oBAAIY,UAAU,MACd,oBAAIA,UAAU,MACd,oBAAIA,UAAU,MACd,8B,GA5DaI,IAAMC,WCwBpBC,MAxBf,WAEE,OADAL,QAAQC,IAAI,QAEV,sBAAKF,UAAU,UAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,8BACE,8FAEA,0CAAY,oDACZ,uFAIJ,sBAAMA,UAAU,WAAhB,SACE,cAAC,EAAD,MAEF,wBAAQA,UAAU,aAAlB,kFCRSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9d7296c3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/doge.5501d350.JPG\";","import classes from './TrueSummonDoge.css';\r\nimport React, {Component} from 'react';\r\nimport dogeImg from './doge.JPG';\r\n\r\nclass TrueSummonDoge extends React.Component {\r\n    state = {\r\n        numbaDoge: [],\r\n        dogeButton: \"dogeButt\",\r\n        dogeReset: \"inactive\",\r\n        dogeWarn: 0,\r\n    }\r\n    \r\n    summonDoge = () => {\r\n        let numbaDogeCopy = this.state.numbaDoge;\r\n        let numbaDogeMasUno = 1 + this.state.numbaDoge.length;\r\n        numbaDogeCopy.push(numbaDogeMasUno);\r\n        this.setState({numbaDoge: numbaDogeCopy, dogeButton:\"dogeButt forever\", dogeReset:\"active\"});\r\n    };\r\n\r\n    resetDoge = () => {\r\n        this.setState({numbaDoge: [], dogeButton:\"dogeButt\", dogeReset:\"inactive\"});\r\n    }\r\n    \r\n    numbaDogeCopyAgain = this.state.numbaDoge;\r\n    stateCopy = this.state;\r\n    \r\n    render () {\r\n        // console.log(this.numbaDogeCopyAgain);\r\n        let doges, coinsSummoned;\r\n        // coinsSummoned = this.numbaDogeCopyAgain.length;\r\n        if (this.numbaDogeCopyAgain.length === 50 && this.state.dogeWarn === 0) {\r\n            this.setState({dogeWarn: 1})\r\n            alert(`Whoa! That's quite a lotta Dogecoins ya got there!`);\r\n        }\r\n        \r\n        if (this.state.dogeReset === \"inactive\") {\r\n            doges = null;\r\n        } else {\r\n        doges = this.numbaDogeCopyAgain.map((x) => {\r\n            // console.log('This key is: ' + x)\r\n            return <img alt=\"doge\" src={dogeImg} style={{borderRadius:\"100%\", border:\"0.5em solid #FF7\", boxShadow:\"0 0 10px #FF9\"}} className={\"Doge\"} key={x}/>\r\n        })}\r\n\r\n\r\n        console.log(\"NEXT ON THE AGENDA: A reset button labeled 'Return Dogecoins' that only appears after you summon at least 1 coin, and disappears after you click it, along with all the coins that have been summoned, returning everything back to its initial load state-- this includes the summon button returning to normal as well.\")\r\n   \r\n        \r\n        return (\r\n            <div>\r\n                {/* ---In-app state checker--- */}\r\n                {/* <p>{this.state.numbaDoge.length}</p>\r\n                <p>{this.state.dogeButton}</p>\r\n                <p>{this.state.dogeReset}</p>\r\n                <p>{this.state.dogeWarn}</p> */}\r\n                <button className={this.state.dogeButton} onClick={this.summonDoge}>SUMMON DOGE</button>\r\n                {/* <button className={this.state.dogeReset} onClick={this.resetDoge}>Return Dogecoins</button> */}\r\n                <p> # Of Dogecoins Summoned: {this.numbaDogeCopyAgain.length}</p>\r\n                <hr className=\"s\"/>\r\n                <hr className=\"m\"/>\r\n                <hr className=\"l\"/>\r\n                {doges}\r\n                <hr className=\"l\"/>\r\n                <hr className=\"m\"/>\r\n                <hr className=\"s\"/>\r\n                <br/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default TrueSummonDoge;","import logo from './logo.svg';\nimport './App.css';\nimport TrueSummonDoge from './TrueSummonDoge/TrueSummonDoge';\n\nfunction App() {\n  console.log(\"Why.\")\n  return (\n    <div className=\"App Add\">\n      <header className=\"App-header\">\n        <div>\n          <h6>\n            So... I heard you like Dogecoin, but you don't wanna invest. \n          <h3>Well... <em>LOOK NO FURTHER</em></h3>\n          <h1>This button is EXACTLY WHAT YOU'RE LOOKING FOR</h1>\n          </h6>\n        </div>\n      </header>\n      <body className=\"App-body\">\n        <TrueSummonDoge/>\n      </body>\n      <footer className=\"App-footer\">\n        Fun little app made by: Brendan Dao   |   Last Updated: May 2021\n      </footer>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}